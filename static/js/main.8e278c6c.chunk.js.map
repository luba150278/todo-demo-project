{"version":3,"sources":["components/Navbar.tsx","pages/AboutPage.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","to","AboutPage","history","useHistory","onClick","push","TodoForm","props","useState","title","setTitle","onChange","event","target","value","type","id","placeholder","onKeyPress","key","onAdd","htmlFor","TodoList","todos","onRemove","onToggle","length","map","todo","classes","completed","join","checked","bind","preventDefault","removeHandler","TodosPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","confirm","filter","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e278c6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar: React.FunctionComponent = () => (\r\n  <nav>\r\n    <div className=\"nav-wrapper teal teal darken-1 px1\">\r\n      <a href=\"#\" className=\"brand-logo\">\r\n        React + TS\r\n      </a>\r\n      <ul className=\"right hide-on-med-and-down\">\r\n        <li>\r\n          <NavLink to=\"/\">Список дел</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/about\">Информация</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AboutPage: React.FC = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <h1>Information page</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro perspiciatis asperiores numquam eos recusandae\r\n        minus consequatur impedit cumque explicabo dolore esse, distinctio exercitationem doloribus ipsum earum veniam\r\n        ex omnis. Incidunt.\r\n      </p>\r\n      <button className=\"btn\" onClick={(): void => history.push('/')}>\r\n        Back to the 'To-Do' page\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React, { useState } from 'react';\r\n\r\ninterface TodoFormProps {\r\n  onAdd(title: string): void;\r\n}\r\n\r\nconst TodoForm: React.FC<TodoFormProps> = (props) => {\r\n  const [title, setTitle] = useState<string>('');\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => setTitle(event.target.value);\r\n  const keyPressHandler = (event: React.KeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      props.onAdd(title);\r\n      setTitle('');\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"input-field mt2\">\r\n      <input\r\n        onChange={changeHandler}\r\n        value={title}\r\n        type=\"text\"\r\n        id=\"title\"\r\n        placeholder=\"Введите название дела\"\r\n        onKeyPress={keyPressHandler}\r\n      />\r\n      <label htmlFor=\"title\" className=\"active\">\r\n        Введите название дела\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\nimport { ITodo } from '../interfaces';\r\n\r\ntype TodoListProps = {\r\n  todos: ITodo[];\r\n  onToggle(id: number): void; // first variant of function/method\r\n  onRemove: (id: number) => void; // second variant - For optional parameters, you can put ? after name of method\r\n};\r\n\r\nconst TodoList: React.FC<TodoListProps> = ({ todos, onRemove, onToggle }) => {\r\n  if (todos.length === 0) {\r\n    return <p className=\"center\">Nothing data now!</p>;\r\n  }\r\n\r\n  const removeHandler = (event: React.MouseEvent, id: number): void => {\r\n    event.preventDefault();\r\n    onRemove(id);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => {\r\n        const classes = ['todo'];\r\n        if (todo.completed) {\r\n          classes.push('completed');\r\n        }\r\n\r\n        return (\r\n          <li className={classes.join(' ')} key={todo.id}>\r\n            <label>\r\n              <input type=\"checkbox\" checked={todo.completed} onChange={onToggle.bind(null, todo.id)} />\r\n              <span>{todo.title}</span>\r\n              <i className=\"material-icons red-text\" onClick={(event): void => removeHandler(event, todo.id)}>\r\n                delete\r\n              </i>\r\n            </label>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TodoForm from '../components/TodoForm';\r\nimport TodoList from '../components/TodoList';\r\nimport { ITodo } from '../interfaces';\r\n\r\ndeclare let confirm: (question: string) => boolean;\r\n\r\nconst TodosPage: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([]);\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\r\n    setTodos(saved);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const assHandler = (title: string): void => {\r\n    const newTodo: ITodo = {\r\n      title,\r\n      id: Date.now(),\r\n      completed: false,\r\n    };\r\n    setTodos((prev) => [newTodo, ...prev]);\r\n  };\r\n\r\n  const toggleHandler = (id: number): void => {\r\n    setTodos((prev) =>\r\n      prev.map((todo) => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed,\r\n          };\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeHandler = (id: number): void => {\r\n    const shoudRemove = confirm('Are you sure to delete the to-do item?');\r\n    if (shoudRemove) {\r\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <TodoForm onAdd={assHandler} />\r\n      <TodoList todos={todos} onToggle={toggleHandler} onRemove={removeHandler} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodosPage;\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport AboutPage from './pages/AboutPage';\nimport TodosPage from './pages/TodosPage';\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <Navbar />\n    <div className=\"container\">\n      <Switch>\n        <Route component={TodosPage} path=\"/\" exact />\n        <Route component={AboutPage} path=\"/about\" exact />\n      </Switch>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}